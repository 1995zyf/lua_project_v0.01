error_log /mnt/hgfs/Linux-Share/Lua/lua_project_v0.01/logs/error.log error;

# Nginx
upstream backend01 {                        # 配置后端服务器组
    #max_fails默认值为1,fail_timeout默认值为10s,max_fails=0表示不做检查
    server 127.0.0.1:8082 weight=1 max_fails=1  fail_timeout=10s;
    server 127.0.0.1:8083 weight=1 max_fails=1  fail_timeout=10s;
    server 127.0.0.1:8084 weight=1 max_fails=1  fail_timeout=10s;
    keepalive 32;
    #hash $request_uri consistent;
}

# ngx.balancer 利用 openresty balancer_by_lua 实现一个简单的 ip_hash upstream 调度
upstream backend{
    server 0.0.0.0;
    balancer_by_lua_block {
        local balancer = require "ngx.balancer"
        local host = {"192.168.1.111", "192.168.1.112"}
        local backend = ""
        local port = ngx.var.server_port
        local remote_ip = ngx.var.remote_addr
        local key = remote_ip..port
        local hash = ngx.crc32_long(key);
        hash = (hash % 2) + 1
        backend = host[hash]
        ngx.log(ngx.DEBUG, "ip_hash=", ngx.var.remote_addr, " hash=", hash, " up=", backend, ":", port)
        local ok, err = balancer.set_current_peer(backend, port)
        if not ok then
            ngx.log(ngx.ERR, "failed to set the current peer: ", err)
            return ngx.exit(500)
        end
        ngx.log(ngx.DEBUG, "current peer ", backend, ":", port)
    }
}

server {
    listen 8081;
    listen 8082;
    listen 8083;
    listen 8084;
    server_name  localhost;
    location / {
        proxy_pass http://backend;           # 注意：proxy_pass后面的路径不带uri时，其会将location的uri传递给后端主机
    }
}

# 配置虚拟服务器8082
server {
    listen 8082;
    server_name  localhost;
    index  chatroom.html index.htm;
    set $web_root /opt/openresty/nginx;
    location / {
        root $web_root/html8082;
    }
}

# 配置虚拟服务器8083
server {
    listen 8083;
    server_name  localhost;
    index  chatroom.html index.htm;
    set $web_root /opt/openresty/nginx;
    location / {
        root $web_root/html8083;
    }
}

# 配置虚拟服务器8084
server {
    listen 8084;
    server_name  localhost;
    index  chatroom.html index.htm;
    set $web_root /opt/openresty/nginx;
    location / {
        root $web_root/html8084;
    }
}
